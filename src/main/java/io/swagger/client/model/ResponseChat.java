/*
 * API whatsgate.ru
 * Интерфейс для взаимодействия с клиентом Whatsapp
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ResponseChatGroupMetadata;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ResponseChat
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-09-07T09:16:17.666Z[GMT]")
public class ResponseChat {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("isGroup")
  private Boolean isGroup = null;

  @SerializedName("isReadOnly")
  private Boolean isReadOnly = null;

  @SerializedName("unreadCount")
  private Integer unreadCount = null;

  @SerializedName("timestamp")
  private Integer timestamp = null;

  @SerializedName("pinned")
  private Boolean pinned = null;

  @SerializedName("isMuted")
  private Boolean isMuted = null;

  @SerializedName("muteExpiration")
  private Boolean muteExpiration = null;

  @SerializedName("groupMetadata")
  private ResponseChatGroupMetadata groupMetadata = null;

  public ResponseChat id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Идентификатор контакта или группы в формате WhatsApp
   * @return id
  **/
  @Schema(description = "Идентификатор контакта или группы в формате WhatsApp")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ResponseChat name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Имя контакта или группы
   * @return name
  **/
  @Schema(description = "Имя контакта или группы")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ResponseChat isGroup(Boolean isGroup) {
    this.isGroup = isGroup;
    return this;
  }

   /**
   * Является ли чат контактом или группой
   * @return isGroup
  **/
  @Schema(description = "Является ли чат контактом или группой")
  public Boolean isIsGroup() {
    return isGroup;
  }

  public void setIsGroup(Boolean isGroup) {
    this.isGroup = isGroup;
  }

  public ResponseChat isReadOnly(Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
    return this;
  }

   /**
   * Является ли чат ReadOnly
   * @return isReadOnly
  **/
  @Schema(description = "Является ли чат ReadOnly")
  public Boolean isIsReadOnly() {
    return isReadOnly;
  }

  public void setIsReadOnly(Boolean isReadOnly) {
    this.isReadOnly = isReadOnly;
  }

  public ResponseChat unreadCount(Integer unreadCount) {
    this.unreadCount = unreadCount;
    return this;
  }

   /**
   * Количество непрочитанных сообщений в чате
   * @return unreadCount
  **/
  @Schema(description = "Количество непрочитанных сообщений в чате")
  public Integer getUnreadCount() {
    return unreadCount;
  }

  public void setUnreadCount(Integer unreadCount) {
    this.unreadCount = unreadCount;
  }

  public ResponseChat timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Время последней активночти в чате
   * @return timestamp
  **/
  @Schema(description = "Время последней активночти в чате")
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }

  public ResponseChat pinned(Boolean pinned) {
    this.pinned = pinned;
    return this;
  }

   /**
   * Является ли чат закрепленным
   * @return pinned
  **/
  @Schema(description = "Является ли чат закрепленным")
  public Boolean isPinned() {
    return pinned;
  }

  public void setPinned(Boolean pinned) {
    this.pinned = pinned;
  }

  public ResponseChat isMuted(Boolean isMuted) {
    this.isMuted = isMuted;
    return this;
  }

   /**
   * Выключен ли у чата звук
   * @return isMuted
  **/
  @Schema(description = "Выключен ли у чата звук")
  public Boolean isIsMuted() {
    return isMuted;
  }

  public void setIsMuted(Boolean isMuted) {
    this.isMuted = isMuted;
  }

  public ResponseChat muteExpiration(Boolean muteExpiration) {
    this.muteExpiration = muteExpiration;
    return this;
  }

   /**
   * Время, оставшееся до включения звука
   * @return muteExpiration
  **/
  @Schema(description = "Время, оставшееся до включения звука")
  public Boolean isMuteExpiration() {
    return muteExpiration;
  }

  public void setMuteExpiration(Boolean muteExpiration) {
    this.muteExpiration = muteExpiration;
  }

  public ResponseChat groupMetadata(ResponseChatGroupMetadata groupMetadata) {
    this.groupMetadata = groupMetadata;
    return this;
  }

   /**
   * Get groupMetadata
   * @return groupMetadata
  **/
  @Schema(description = "")
  public ResponseChatGroupMetadata getGroupMetadata() {
    return groupMetadata;
  }

  public void setGroupMetadata(ResponseChatGroupMetadata groupMetadata) {
    this.groupMetadata = groupMetadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseChat responseChat = (ResponseChat) o;
    return Objects.equals(this.id, responseChat.id) &&
        Objects.equals(this.name, responseChat.name) &&
        Objects.equals(this.isGroup, responseChat.isGroup) &&
        Objects.equals(this.isReadOnly, responseChat.isReadOnly) &&
        Objects.equals(this.unreadCount, responseChat.unreadCount) &&
        Objects.equals(this.timestamp, responseChat.timestamp) &&
        Objects.equals(this.pinned, responseChat.pinned) &&
        Objects.equals(this.isMuted, responseChat.isMuted) &&
        Objects.equals(this.muteExpiration, responseChat.muteExpiration) &&
        Objects.equals(this.groupMetadata, responseChat.groupMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, isGroup, isReadOnly, unreadCount, timestamp, pinned, isMuted, muteExpiration, groupMetadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseChat {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isGroup: ").append(toIndentedString(isGroup)).append("\n");
    sb.append("    isReadOnly: ").append(toIndentedString(isReadOnly)).append("\n");
    sb.append("    unreadCount: ").append(toIndentedString(unreadCount)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
    sb.append("    isMuted: ").append(toIndentedString(isMuted)).append("\n");
    sb.append("    muteExpiration: ").append(toIndentedString(muteExpiration)).append("\n");
    sb.append("    groupMetadata: ").append(toIndentedString(groupMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
