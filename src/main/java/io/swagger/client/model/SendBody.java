/*
 * API whatsgate.ru
 * Интерфейс для взаимодействия с клиентом Whatsapp
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SendBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-09-07T09:16:17.666Z[GMT]")
public class SendBody {
  @SerializedName("WhatsappID")
  private String whatsappID = null;

  @SerializedName("async")
  private Boolean async = null;

  @SerializedName("recipient")
  private AnyOfsendBodyRecipient recipient = null;

  @SerializedName("message")
  private AnyOfsendBodyMessage message = null;

  public SendBody whatsappID(String whatsappID) {
    this.whatsappID = whatsappID;
    return this;
  }

   /**
   * Service Whatsapp ID
   * @return whatsappID
  **/
  @Schema(required = true, description = "Service Whatsapp ID")
  public String getWhatsappID() {
    return whatsappID;
  }

  public void setWhatsappID(String whatsappID) {
    this.whatsappID = whatsappID;
  }

  public SendBody async(Boolean async) {
    this.async = async;
    return this;
  }

   /**
   * Async query returns Message Object
   * @return async
  **/
  @Schema(description = "Async query returns Message Object")
  public Boolean isAsync() {
    return async;
  }

  public void setAsync(Boolean async) {
    this.async = async;
  }

  public SendBody recipient(AnyOfsendBodyRecipient recipient) {
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @Schema(description = "")
  public AnyOfsendBodyRecipient getRecipient() {
    return recipient;
  }

  public void setRecipient(AnyOfsendBodyRecipient recipient) {
    this.recipient = recipient;
  }

  public SendBody message(AnyOfsendBodyMessage message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public AnyOfsendBodyMessage getMessage() {
    return message;
  }

  public void setMessage(AnyOfsendBodyMessage message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendBody sendBody = (SendBody) o;
    return Objects.equals(this.whatsappID, sendBody.whatsappID) &&
        Objects.equals(this.async, sendBody.async) &&
        Objects.equals(this.recipient, sendBody.recipient) &&
        Objects.equals(this.message, sendBody.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(whatsappID, async, recipient, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendBody {\n");
    
    sb.append("    whatsappID: ").append(toIndentedString(whatsappID)).append("\n");
    sb.append("    async: ").append(toIndentedString(async)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
